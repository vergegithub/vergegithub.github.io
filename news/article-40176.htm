<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vergegithub.github.io/news/article-40176.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>C# 正则表达式判断是否是有效的文件、文件夹路径</title>
        <meta name="description" content="省流 /// &lt;summary&gt; /// 是否有效的文件，文件夹路径 /// &lt;/summary&gt; /// &lt;param name="val"&gt;&lt;/param" />
        <link rel="icon" href="/assets/website/img/vergegithub/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Verge Github免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vergegithub.github.io/news/article-40176.htm" />
    <meta property="og:site_name" content="Verge Github免费机场订阅节点官网" />
    <meta property="og:title" content="C# 正则表达式判断是否是有效的文件、文件夹路径" />
    <meta property="og:image" content="https://vergegithub.github.io/uploads/20241103/d1cfb9c74e266499701fed2f03da24ee.webp" />
        <meta property="og:release_date" content="2025-01-13T08:17:58" />
    <meta property="og:updated_time" content="2025-01-13T08:17:58" />
        <meta property="og:description" content="省流 /// &lt;summary&gt; /// 是否有效的文件，文件夹路径 /// &lt;/summary&gt; /// &lt;param name="val"&gt;&lt;/param" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="C# 正则表达式判断是否是有效的文件、文件夹路径">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- css here -->
    <link rel="stylesheet" href="/assets/website/css/vergegithub/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/vergegithub/meanmenu.css">
    <link rel="stylesheet" href="/assets/website/css/vergegithub/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/vergegithub/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/vergegithub/fontawesome-all.min.css">
    <link rel="stylesheet" href="/assets/website/css/vergegithub/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/vergegithub/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/vergegithub/scrolltop.css">
    <link rel="stylesheet" href="/assets/website/css/vergegithub/swiper.min.css">
    <link rel="stylesheet" href="/assets/website/css/vergegithub/default.css">
    <link rel="stylesheet" href="/assets/website/css/vergegithub/style.css">
    <link rel="stylesheet" href="/assets/website/css/vergegithub/responsive.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-VCFC00Q4E1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-VCFC00Q4E1');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- preloaders start -->
    <div class="preloader">
        <div class="spinner">
            <div class="rect1"></div>
            <div class="rect2"></div>
            <div class="rect3"></div>
            <div class="rect4"></div>
            <div class="rect5"></div>
        </div>
    </div>
    <!-- preloaders end -->
    <!-- header area start -->
    <header>
        <!-- header area start -->
        <div class="header-area">
            <div class="container">
                <div class="row">
                    <!-- logo start -->
                    <div class="col-md-4">
                        <div class="header-logo">
                            <a href="/">
                                                                <span>Verge Github</span>
                                                            </a>
                        </div>
                    </div>
                    <!-- main menu area start -->
                    <div class="col-md-8">
                        <div class="main-menu-area float-right">
                            <div class="main-menu">
                                <nav id="mobile-menu">
                                    <ul>
                                                                                <li><a href="/">首页</a></li>
                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                                <li><a href="#">关于</a></li>
                                        <li><a href="#">联系</a></li>
                                    </ul>
                                </nav>
                            </div>
                        </div>
                        <div class="mobile-menu"></div>
                    </div>
                    <!-- main menu area end -->
                </div>
            </div>
        </div>
        <!-- header area end -->
    </header>
    <!-- header area end -->
    <!-- main area start -->
    <main>
        <!-- breadcrumb area start -->
        <div id="apork-breadcrumb-area" class="apork-breadcrumb-area text-center">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <h1>C# 正则表达式判断是否是有效的文件、文件夹路径</h1>
                        <ul class="breadcrumb justify-content-center">
                            <li class="breadcrumb-item"><a href="/" title="首页">首页</a></li>
                            <li class="breadcrumb-item"><a href="/news/" title="新闻资讯">新闻资讯</a></li>
                            <li class="breadcrumb-item active">正文</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- breadcrumb area end -->
        <!-- about area start -->
        <div class="apork-about-area mt-230 mb-90">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Verge Clash节点订阅官网" data-url="https://vergeclash.github.io">
                  				  				  				</h1> <h2 id="省流">省流</h2> <pre><code class="language-c#">/// &lt;summary&gt; /// 是否有效的文件，文件夹路径 /// &lt;/summary&gt; /// &lt;param name="val"&gt;&lt;/param&gt; /// &lt;returns&gt;是，返回true；不是返回false&lt;/returns&gt; public bool IsValidFolderPath(string val) {     Regex regex = new Regex(@"^([a-zA-Z]:\\)([-\u4e00-\u9fa5\w\s.()~!@#$%^&amp;()\[\]{}+=]+\\?)*$");     Match result = regex.Match(val);     return result.Success; }  // "F:\\Total客户端项目\\客户端项目\\2017-01-09 Client\\(aa)\\V1.3.4\\New_1.2\\V13&amp;V14\\.()~!@#$%^&amp;()-+="; // 匹配结果：true</code></pre> <p>解释：</p> <p>分为2大段，一段匹配盘符，一段匹配后续文件、文件夹路径</p> <ol> <li> <p>^<code>([a-zA-Z]:\\)</code>：必须以盘符的形式开头。</p> <p><code>^</code>表示从起始位置匹配，<code>[a-zA-Z]</code>表示第1位必须是<code>a~z</code>或<code>A~Z</code>其中之一。<code>:\\</code>表示第1位后必须接字符串<code>:\</code>。<code>\\</code>是正则中<code>\</code>的转义。</p> </li> <li> <p><code>([-\u4e00-\u9fa5\w\s.()~!@#$%^&amp;()\[\]{}+=]+\\?)*$</code>：后续以一定取值范围组成一个个结构。</p> <p>先看[]内，<code>\u4e00-\u9fa5</code>表示匹配汉字，<code>\w</code>，<code>\s</code>都是元字符有其对应的匹配范围。其余这些字符<code>-.()~!@#$%^&amp;()\[\]{}+=</code>就代表它们自身。其中<code>\[</code>是<code>[</code>的转义，<code>\]</code>是<code>]</code>的转义。<code>[~]+</code>表示<code>[]</code>中的内容至少需要出现1次。<code>\\?</code>表示，<code>[~]</code>内的字符写完后，可以在后面接一个字符<code>\</code>，也可以不接。<code>(~)*</code>表示<code>()</code>内容可以重复任意次数，也可以一次不出现。<code>$</code>表示匹配到结束位置，搭配前面的<code>^</code>表示整个输入字符串的结构都得符合这个正则表达式。</p> </li> </ol> <p>几点注意：</p> <ol> <li>上面得<code>[~]</code>指代表达式中<code>[]</code>的所有内容，<code>（~）</code>指代表达式中<code>（）</code>的所有内容，应该挺好理解吧。</li> <li>写了解释主要是自己总结一下，你看估计也看不懂，要不直接拿去用，要不老老实实去学吧，这些都是基础，就把正则表达式的基础学了基本就够用。</li> <li>不同系统下可不可以匹配汉字是不一样的。比如C#环境里<code>\w</code>好像就可以匹配汉字，但javascript环境里<code>\w</code>就匹配不了汉字。</li> <li>正则自己的转义和放入字符串中的转义挺容易懵的，写的时候要注意。</li> <li>个人理解，只有一个路径，是判断不出来这个路径是文件还是文件夹的，因为文件夹名也可以叫<code>setup.exe</code>，文件名也可以没有后缀。windows的文件命名规范中只不允许9个字符的出现。<code>/ \ ? * : " &lt; &gt; |</code>其他都可以。</li> </ol> <h2 id="学习编写验证过程">学习编写验证过程</h2> <p>鉴于网上找了好几个都是垃圾,既不好使也不知道到底在判断啥，所以不得不万事靠自己。</p> <p>学习自<br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://deerchao.cn/tutorials/regex/regex.htm"  target="_blank" rel="nofollow">https://deerchao.cn/tutorials/regex/regex.htm 2019-11-15</a></p> <h3 id="元字符metacharacter">元字符metacharacter</h3> <table> <thead> <tr> <th>字符</th> <th>相关解释</th> <th></th> </tr> </thead> <tbody> <tr> <td>\b</td> <td>匹配单词的开头或结尾，也就是单词的分界处。可用于精确查找一个单词</td> <td></td> </tr> <tr> <td>.</td> <td>匹配除了换行以外的任意字符</td> <td></td> </tr> <tr> <td>*</td> <td>*前面的内容可以重复任意次</td> <td></td> </tr> <tr> <td>+</td> <td>+前面的内容可以连续重复1或任意更多次。通俗一点说，就是至少得匹配一次。</td> <td></td> </tr> <tr> <td>?</td> <td>?前面的内容可以连续重复0或1次。</td> <td></td> </tr> <tr> <td>{x}</td> <td>x：数字。{x}前面的内容必须重复x次</td> <td></td> </tr> <tr> <td>{x,}</td> <td>x。{x,}前面的内容必须重复至少x次</td> <td></td> </tr> <tr> <td>{x,y}</td> <td>x,y：数字。{x,y}前面的内容必须重复x,y之间的次数，包括x，y</td> <td></td> </tr> <tr> <td>(xxx)</td> <td>表示分组</td> <td></td> </tr> <tr> <td>[x,y,z]</td> <td>表示单个匹配</td> <td></td> </tr> <tr> <td>\d</td> <td>匹配一位十进制数字，也就是0~9</td> <td>[0-9]</td> </tr> <tr> <td>\s</td> <td>匹配任意空白符，空格，制表符，换行符，中文全角空格等</td> <td></td> </tr> <tr> <td>\w</td> <td>匹配数字，字母，下划线【中文】</td> <td>[a-z0-9A-Z_]</td> </tr> <tr> <td>^</td> <td>匹配字符串的开始位置</td> <td></td> </tr> <tr> <td>$</td> <td>匹配字符串的结束位置</td> <td></td> </tr> </tbody> </table> <p>如何从一个字符串中查找字符串‘hi’？</p> <pre><code class="language-c#">Regex regex = new Regex("hi"); // 注意：如history，high等词中的hi也会被匹配。</code></pre> <p>如何精确查找hi这个词？使用\b</p> <pre><code class="language-c#">Regex regex = new Regex(@"\bhi\b");</code></pre> <p>这样就可以精确查找到‘hi’这个词。</p> <p>如何查找hi，xxxxx，Lucy?</p> <pre><code class="language-c#">Regex regex = new Regex(@"\bhi\b.*\bLucy\b"); // `.*`不能换行。是匹配不包含换行的任意数量字符</code></pre> <p>如何匹配一个中国电话号码？格式为：<code>xx-xxxxxxxxxxxxxxx</code></p> <pre><code class="language-c#">Regex regex = new Regex(@"\d\d-\d\d\d\d\d\d\d\d\d\d\d\d\d\d\d");</code></pre> <p>如何匹配一个188开头的电话号码？</p> <pre><code class="language-c#">Regex regex = new Regex(@"\d\d-188\d\d\d\d\d\d\d\d\d\d\d\d");</code></pre> <p>这如果要匹配一个100位数字岂不是都写不下了，所以必然存在优化写法。</p> <pre><code class="language-c#">Regex regex = new Regex(@"\d{2}-188\d{12}");</code></pre> <p>\d{2} 的话能不能匹配85555这种？与high中匹配hi一样？</p> <p>如果没有限制也是会都匹配的，如果想要精确匹配，也要在前后使用元字符\b</p> <p>如果有长号有短号想一起匹配怎么办？</p> <pre><code class="language-c#">Regex regex = new Regex(@"\d{2,3}-188\d{6,12}");</code></pre> <p>解析一个电话号相关的表达式<code>^\(?0\d{2}[) -]?\d{8}</code></p> <ol> <li><code>^</code>:表示验证字符串必须以<code>（</code>或0开头</li> <li><code>\(?</code> :<code>\(</code>是<code>(</code>的转义，<code>?</code>表示出现1次或不出现</li> <li><code>0\d{2}</code> : 表示0起始后面跟2位数字</li> <li><code>[) -]?</code>：表示数字后面的1位或者什么都没有，或者是<code>）</code>,<code>空格</code>,<code>-</code>3个中的一个</li> <li><code>\d{8}</code>：表示8位数字。</li> </ol> <pre><code class="language-c#">string phone = "(010)88886666"; string phone1 = "(010x88886666"; string phone2 = "011)-888866660000"; string phone3 = "011-888866660000"; string phone4 = "99011-88886666"; Regex regex30 = new Regex(@"^\(?0\d{2}[) -]?\d{8}"); Match resultphone = regex30.Match(phone);// 匹配成功 Match resultphone1 = regex30.Match(phone1);// 匹配失败，因为010后出现了[]中不存在的字符 Match resultphone2 = regex30.Match(phone2);// 匹配失败，因为[]后没有接8位数字，不是说-也在[]中就可以，[]永远只匹配一个位置 Match resultphone3 = regex30.Match(phone3);// 匹配成功，因为这个正则表达式没有用$限制结尾 Match resultphone4 = regex30.Match(phone4);// 匹配失败，因为这个正则表达式用^限制了开头，必须为（或0。</code></pre> <h3 id="关于和">关于<code>^</code>和<code>$</code></h3> <p>以前老不理解这玩意都啥用，其实就是对匹配范围进行限制。以一段数字字符为例。</p> <p>正常使用<code>9/d{2}</code>进行匹配，匹配条件可以解释为，“以9开头并在后面跟任意2位数字的字符串”可以匹配成功，也就是998。</p> <p>但如果使用^进行限制<code>^9/d{2}</code>。匹配条件就变为“输入字符串必须是以9并在后面跟任意2位数字开头的字符串”。匹配就会失败。</p> <p>把9去掉<code>^/d{2}</code>，匹配条件就变为“输入字符串必须是以任意2位数字开头的字符串”。匹配就会成功。</p> <p>若用$限制<code>/d{2}$</code>，匹配条件就变为“输入字符串必须是以任意2位数字结尾的字符串”。匹配成功。</p> <p>若改为<code>58$</code>，匹配条件就变为“输入字符串必须是以‘58’结尾的字符串”。匹配就会失败。</p> <p>若用<code>^，$</code>限制，<code>^/d{2}$</code>,匹配条件就变为“输入字符串必须是2位数字的字符串”，匹配失败。</p> <p>改为<code>^/d{18}$</code>，,匹配条件就变为“输入字符串必须是18位数字的字符串”，匹配成功。</p> <p>代码如下：</p> <pre><code class="language-c#">string numberStr2 = "123456789987645312"; Regex regex2 = new Regex(@"9\d{2}"); Match result2 = regex2.Match(numberStr2);  Regex regex3 = new Regex(@"^9\d{2}"); Match result3 = regex3.Match(numberStr2);  Regex regex4 = new Regex(@"\d{2}$"); Match result4 = regex4.Match(numberStr2);  Regex regex5 = new Regex(@"58$"); Match result5 = regex5.Match(numberStr2);  Regex regex6 = new Regex(@"^\d{2}$"); Match result6 = regex6.Match(numberStr2);  Regex regex7 = new Regex(@"^\d{18}$"); Match result7 = regex7.Match(numberStr2);</code></pre> <h3 id="关于和-1">关于<code>()</code>，<code>[]</code>,和<code>{}</code></h3> <p>首先是{}，这个没什么说的，就是表示重复次数的。{2}，{2,},{2,5}这种。</p> <p>其次[]表示单个匹配。只能表示1个位置，这个位置的内容必须为[]中的选项之一。</p> <p>看到这么描述大约有以下几种疑问</p> <p>单独使用[]有啥用？</p> <pre><code class="language-c#">Regex regex8 = new Regex(@"[打]"); Match result8 = regex8.Match(Str8);  Regex regex9 = new Regex(@"[打s]"); Match result9 = regex9.Match(Str8);  Regex regex10 = new Regex(@"[打s黑]"); Match result10 = regex10.Match(Str8);  Regex regex11 = new Regex(@"[黑]"); Match result11 = regex11.Match(Str8);  Regex regex12 = new Regex(@"打"); Match result12 = regex12.Match(Str8);  Regex regex13 = new Regex(@"黑s打"); Match result13 = regex13.Match(Str8);// 匹配失败  Regex regex14 = new Regex(@"[黑s打]");// 匹配成功，找到‘打’ Match result14 = regex14.Match(Str8);  // 单独使用就是从头至尾匹配输入字符串的每一个字符。找到输入字符串中第一个能与[]中任意一个字符匹配的上的。 // 如果[]中只有1个字符，那有没有[]完全一样。如果[]内有多个字符是不一样的。 // 想象不出来使用场景，[]在实际应用中也大多配合其他条件一起使用</code></pre> <p>[]里要是有元字符怎么办？</p> <p>解决方法很简单：转义。</p> <p>但具体怎么转其实还是有点绕。这个绕不是说有多难，而是这个点你需要有印象，遇到的时候要能反映过来。</p> <p>这个我认为很容易懵的点在于C#自身字符串的转义与正则表达式的转义混合。</p> <p>首先明确一下C#中的转义，C#中转义有2种方法：</p> <pre><code class="language-c#">// 字符原文： //a我打[]{}aa\bb"cc''dd^ee/dff //another row // '[',']','{','}',''','^','/'本身就不需要转义，需要转义的是'\','"',换行  // 第1种 需要转义的符号前加'\' string stringStr1 = "a我打[]{}aa\\bb\"cc''dd^ee/dff\r\nanother row"; // 第2种，整个字符串用'@'修饰 // 这种情况下，'\'，换行不用转义了。但'"'还需要转义，因为不转义字符串就提前结束了，用两个双引号'""'表示普通字符'"' string stringStr2 = @"a我打[]{}aa\bb""cc''dd^ee/dff another row";</code></pre> <p>正则表达式中需要转义的符号很多，所有元字符全部需要转义。但好消息是转义方式只有1种，就是在需要转义的符号前加<code>\</code>。</p> <p>这再把这些表达式放入C#字符串中，就分不清到底是字符串转义，还是正则转义，正则转义后进入字符串会不会又要转义等等等等。懵。</p> <p>元字符包括：( ) [ ] { } \ ^ $ | ? * . + /。 ”/“需不需要转义好像有点争议。查了一下发现很多编译器关于正则的转义是有一些默认处理的，也没找到个权威的规则，就视具体情况而定。</p> <pre><code class="language-c#">// 上面的例子，匹配一个9开头跟2个数字的字符 Regex regex15 = new Regex("9\d{2}"); // 这样写就会报错，因为正则'\d'中的'\'是c#字符串中转义的标识。这么写C#就会认为'\d'是一个转义符，而又不知道转义成了什么，就会报错：CS1009：无法识别的转义序列。 // 所需要将'\'转义，如上使用@或另一种转义方法都可以 Regex regex16 = new Regex(@"9\d{2}"); Regex regex17 = new Regex("9\\d{2}");  // 另一个很需要有印象的例子。就是一个位置只能使用字符'\'或字符'd' // 其实很简单，用[]就行 Regex regex18 = new Regex("[\d]");//如上报错：CS1009：无法识别的转义序列。 // 一开没转义，改为 Regex regex19 = new Regex("[\\d]");//编译通过，完活。 string str10 = @"a我打[]{}aa\bb""cc''dd^ee/dff\\"; Match result19 = regex19.Match(str10);// 匹配失败 // 然而result19的结果是 匹配失败。 // 这就是字符转义与正则转义的混合。 // '\\d'仅处理了字符串中'\'的问题，没有解决正则'[\d]'中'\'也需要转义的问题； // 想要实现一个位置只能使用字符'\'或字符'd'，正确的正则表达应该为[\\d] // 那么再将其放入C#字符串中，每个'\'都要再转义一次，即为 Regex regex20 = new Regex("[\\\\d]"); Match result20 = regex20.Match(str10); // 或 Regex regex21 = new Regex(@"[\\d]"); Match result21 = regex21.Match(str10); // 我还好奇了一下[]中有重复字符会怎样 Regex regex22 = new Regex(@"[\\\\d]"); Match result22 = regex22.Match(str10); // 结果好像没啥区别，有相同字符无所谓的，没影响  // 这里后续使用又发现了一点，补充一下 // 前文提到: Regex regex19 = new Regex("[\\d]"); string str10 = @"a我打[]{}aa\bb""cc''dd^ee/dff\\"; Match result19 = regex19.Match(str10); // 会编译通过，但是匹配失败。这里遗漏了一个问题，就是new Regex("[\\d]");到底再匹配什么？ // 答案就是它再匹配'/d'，也就是任意以为0~9的数字 string str101 = @"a我打[]{}aa\bb""cc''dd^ee/dff\\"; string str102 = @"a我打[]{}aa\bb""cc''d9d^ee/dff\\";//中间加了个9 Regex regex191 = new Regex("[\\d]"); Match result191 = regex191.Match(str101);//匹配失败 Match result192 = regex191.Match(str102);//匹配成功，找到9 //所以[],不止能匹配[]中的实际内容，还可以配合元字符匹配所有那一类字符</code></pre> <p><code>[]</code>搭配<code>-</code>可以表示连续的字符</p> <pre><code class="language-c#">Regex regex22 = new Regex("[0-3]");// 某位置匹配0~3，也就是0，1，2，3</code></pre> <p><code>[]</code>搭配<code>^</code>可以表示排除</p> <pre><code class="language-c#">Regex regex23 = new Regex("[^0-3]");//  某位置匹配除了0，1，2，3都可以。</code></pre> <p>可以复习一下要是就想匹配<code>-</code>，<code>^</code>，甚至<code>[]</code>怎么办？</p> <pre><code class="language-c#">Regex regex24 = new Regex("[\\^\\[\\]\\-]"); //或 Regex regex25 = new Regex(@"[\^\[\]\-]");</code></pre> <p>这里实际试了一下这些特殊字符，除了<code>[ 和 ]</code>不转义也能匹配，迷惑。</p> <p>最后就是()，()有很多功能，包括限制多选结构的范围，分组，捕获文本，环视，特殊模式处理。</p> <p>我感觉比较基础的使用就是限制多选与分组。</p> <pre><code class="language-c#">// 匹配必须整段一模一样的abc或bcd或cde， Regex regex26 = new Regex("(abc|bcd|cde)");  // 匹配必须有连续2个adb的重复，也就是abcabc，abcaabc不行 Regex regex27 = new Regex("(abc){2}");</code></pre> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-40174.htm">kubectl的安装和设置命令补全（linux和win10）</a></p>
                                        <p>下一个：<a href="/news/article-40662.htm">狗粮排名前十品牌大全及价格及图片（狗粮十大品牌排行榜）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-17-free-high-speed-nodes.htm" title="「1月17日」每日订阅更新，21.8M/S高速Clash/Shadowrocket/SSR/V2ray/Clash Verge免费节点链接分享">「1月17日」每日订阅更新，21.8M/S高速Clash/Shadowrocket/SSR/V2ray/Clash Verge免费节点链接分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-1-free-node-subscribe-links.htm" title="Verge Github节点订阅每天更新19.6M/S免费节点订阅链接">Verge Github节点订阅每天更新19.6M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-4-node-share-links.htm" title="Verge Github节点订阅每天更新18M/S免费节点订阅链接">Verge Github节点订阅每天更新18M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-12-free-subscribe-node.htm" title="Verge Github节点订阅每天更新18M/S免费节点订阅链接">Verge Github节点订阅每天更新18M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-37214.htm" title="做宠物粮食的公司（宠物粮食供应商）">做宠物粮食的公司（宠物粮食供应商）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-28-node-share-links.htm" title="Verge Github节点订阅每天更新22.3M/S免费节点订阅链接">Verge Github节点订阅每天更新22.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-26-node-share.htm" title="Verge Github节点订阅每天更新19.6M/S免费节点订阅链接">Verge Github节点订阅每天更新19.6M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-23523.htm" title="动物医院的电话是多少号啊（动物医院的电话号码）">动物医院的电话是多少号啊（动物医院的电话号码）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-27-free-high-speed-nodes.htm" title="Verge Github节点订阅每天更新19.3M/S免费节点订阅链接">Verge Github节点订阅每天更新19.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-35216.htm" title="一般宠物疫苗多少钱（宠物疫苗多少钱一针猫咪）">一般宠物疫苗多少钱（宠物疫苗多少钱一针猫咪）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
        <!-- about area end -->
                <!-- footer area start -->
        <footer id="apork-footer-area" class="apork-footer-area">
            <div class="container">
                <div class="row">
                    <div class="col-xl-12 col-lg-12">
                        <div class="footer-copyright text-center py-5">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <p>
                                <a href="/">Verge Github免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!-- footer area end -->
        <!-- scrolltop button -->
        <div class="material-scrolltop"></div>
        <!-- js here -->
        <script src="/assets/website/js/frontend/vergegithub/modernizr-3.5.0.min.js"></script>
        <script src="/assets/website/js/frontend/vergegithub/jquery-1.12.4.min.js"></script>
        <script src="/assets/website/js/frontend/vergegithub/popper.min.js"></script>
        <script src="/assets/website/js/frontend/vergegithub/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/vergegithub/swiper.min.js"></script>
        <script src="/assets/website/js/frontend/vergegithub/meanmenu.min.js"></script>
        <script src="/assets/website/js/frontend/vergegithub/magnific-popup.min.js"></script>
        <script src="/assets/website/js/frontend/vergegithub/owl.carousel.min.js"></script>
        <script src="/assets/website/js/frontend/vergegithub/waypoints.min.js"></script>
        <script src="/assets/website/js/frontend/vergegithub/counterup.min.js"></script>
        <script src="/assets/website/js/frontend/vergegithub/scrolltop.js"></script>
        <script src="/assets/website/js/frontend/vergegithub/ajax-form.js"></script>
        <script src="/assets/website/js/frontend/vergegithub/plugins.js"></script>
        <script src="/assets/website/js/frontend/vergegithub/main.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </main>
    <!-- main area end -->
</body>

</html>